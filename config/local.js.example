/**
 * Installation specific application configuration
 */
const path = require('path');

module.exports = {
    // Server instance name (alphanumeric)
    instance: 'server1',

    // Official URL
    official_url: 'http://localhost:3000',

    // Environment
    env: process.env.NODE_ENV || (!!process.env.DEBUG ? 'development' : 'production'),

    // Loaded modules
    modules: [
        '~arpen-i18n/src',
        '~arpen-telegram/src',
        'cdrbot',
        'bot',
    ],

    // Servers
    servers: {
        bot: {
            class: 'servers.telegram',
            token: 'token_here',
            pin_code: '0000',
            cdr: {
                records_path: '/var/spool/asterisk/monitor',
                dst_limit: [],
            },
            session_file: path.join(__dirname, '..', 'sessions', 'aesthetics.db'),
            middleware: [
                'telegram.localSession',
                'telegram.init',
                'telegram.i18n',
                'telegram.commander',
                'telegram.flow',
                'telegram.start',
            ],
            webhook: {
                enable: false,
                //path: 'secret-string-here', // random if commented out
                host: '1.2.3.4',
                port: 8443,
                key: path.join(__dirname, '..', 'certs', '1.2.3.4.key'),
                cert: path.join(__dirname, '..', 'certs', '1.2.3.4.cert'),
                max_connections: 40,
            },
        },
    },

    // MySQL servers
    mysql: {
        cdr: {
            host: 'localhost',
            port: 3306,
            user: 'user',
            password: 'password',
            database: 'dbname',
            connection_limit: 100,
        },
    },

    // SMTP servers
    smtp: {
        main: {
            host: 'localhost',
            port: 25,
            ssl: false,
            //user: 'username',
            //password: 'password',
        },
    },

    email: {
        from: 'root@localhost',
        log: {
            enable: false,                  // email logger messages or not
            level: 'error',
            to: 'debug@example.com',
        },
        crash: {
            enable: false,                  // email program crash or not
            to: 'debug@example.com',
        },
    },

    logs: {
        main: {
            level: 'info',
            default: true,
            name: 'error.log',
            path: path.join(__dirname, '..', 'logs'),
            interval: '1d',
            mode: 0o640,
            max_files: 3,
            history: path.join(__dirname, '..', 'logs', 'error.log.history'),
        },
    },

/*
    user: { // Drop privileges, otherwise comment out this section
        uid: 'www',
        gid: 'www',
    },
*/
};